<?php

/**
 * Basefeed
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $source_id
 * @property string $title
 * @property string $link
 * @property string $description
 * @property string $author
 * @property source $source
 * 
 * @method integer getSourceId()    Returns the current record's "source_id" value
 * @method string  getTitle()       Returns the current record's "title" value
 * @method string  getLink()        Returns the current record's "link" value
 * @method string  getDescription() Returns the current record's "description" value
 * @method string  getAuthor()      Returns the current record's "author" value
 * @method source  getSource()      Returns the current record's "source" value
 * @method feed    setSourceId()    Sets the current record's "source_id" value
 * @method feed    setTitle()       Sets the current record's "title" value
 * @method feed    setLink()        Sets the current record's "link" value
 * @method feed    setDescription() Sets the current record's "description" value
 * @method feed    setAuthor()      Sets the current record's "author" value
 * @method feed    setSource()      Sets the current record's "source" value
 * 
 * @package    rssreader
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basefeed extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('feed');
        $this->hasColumn('source_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('link', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('author', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('source', array(
             'local' => 'source_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}